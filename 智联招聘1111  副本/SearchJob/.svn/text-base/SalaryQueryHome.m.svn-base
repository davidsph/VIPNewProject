//
//  SalaryQueryHome.m
//  SalarySearch
//
//  Created by Ibokan on 12-10-8.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "SalaryQueryHome.h"

#import "SelectQueryConditons.h"
#import "SalaryQueryResult.h"
#import "PromptsView.h"//提示文字的一种设置
#import "QueryConditions.h"//初始化查询条件的类

@implementation SalaryQueryHome

@synthesize experience =_experience;
@synthesize queryData;


- (void)dealloc
{
    [textLabelArray release];
    [detailLabelArray release];
 
    [activityView release];
    
    [self.queryData release];
    
    [promptView release];
    [super dealloc];
}
- (id)initWithStyle:(UITableViewStyle)style
{
    self = [super initWithStyle:style];
    if (self) {
         NSLog(@"%s %d",__FUNCTION__,__LINE__);
         
    }
    return self;
}

- (void)didReceiveMemoryWarning
{
    NSLog(@"%s %d",__FUNCTION__,__LINE__);
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle
-(void)loadView
{ 
    NSLog(@"%s %d",__FUNCTION__,__LINE__);
    self.title =@"薪酬查询";

    UIButton *btn=[UIButton buttonWithType:UIButtonTypeCustom];
    btn.frame=CGRectMake(0, 0, 44, 34);
    [btn setTitle:@"首页" forState:UIControlStateNormal];
    [btn setBackgroundImage:[UIImage imageNamed:@"返回按钮"] forState:UIControlStateNormal];
    btn.titleLabel.font = [UIFont fontWithName:@"Arial" size:15.0];
    [btn addTarget:self action:@selector(backFirstView) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *backBtn=[[UIBarButtonItem alloc]initWithCustomView:btn];  
    self.navigationItem.leftBarButtonItem=backBtn; 
    [backBtn release];
    
    
    
    self.tableView =[[UITableView alloc] initWithFrame:CGRectMake(0, 0, 320, 460) style:UITableViewStyleGrouped];
     self.tableView.backgroundColor =[UIColor colorWithPatternImage:[UIImage imageNamed:@"centerBackground.png"]];
    
    UIButton  *queryBtn =[UIButton buttonWithType:UIButtonTypeCustom];
    queryBtn.frame =CGRectMake(50, 375, 220, 40);
    [queryBtn setBackgroundImage:[UIImage imageNamed:@"button_bg_normal.png"] forState:UIControlStateNormal];
    [queryBtn setTitle:@"查询" forState:UIControlStateNormal];
    
    [queryBtn  addTarget:self action:@selector(queryBtnClicked) forControlEvents:UIControlEventTouchUpInside];
    [self.tableView addSubview:queryBtn];

    activityView  =[[ActivityView  alloc] initWithFrame:CGRectMake(0, 0, 320, 460)];
    [self.tableView addSubview:activityView];//addsubview
    [activityView hidden];//暂时隐藏 ，需要时再把它显示出来
    
}

-(void)backFirstView
{
    [self dismissModalViewControllerAnimated:YES];
}

- (void)viewDidLoad
{
    [super viewDidLoad];

    
    
    textLabelArray  =[[NSMutableArray alloc] initWithObjects:@"地区:",@"行业:",@"企业性质:",@"职位类别:",@"职位级别:", nil];
    detailLabelArray  =[[NSMutableArray alloc] initWithObjects:@"请选择地区",@"请选择行业",@"请选择企业性质",@"请选择职位类别",@"请选择职位级别", nil];
    
    self. experience =1;//初始化为有工作经验
    
    promptView =[[PromptsView alloc] initWithFrame:CGRectMake(60, 200, 200, 40)];
    [self.tableView addSubview:promptView];
    [promptView hidden];//先隐藏着，需要的时候再调出来
    
    
}
-(void)queryBtnClicked
{
    NSLog(@"%s %d",__FUNCTION__,__LINE__);
    NSLog(@"QueryButton down!!!");
    
    for (int i =1; i<=6; i++) {
        if (i ==6) {//月薪输入框的值
            UITableViewCell  *cell =[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:i inSection:0]];
            UITextField  *tf =(UITextField *)[cell .contentView viewWithTag:2000];
            if ([tf.text isEqualToString:@""]) {
                
                [UIView beginAnimations:nil context:nil];
                [UIView setAnimationDuration:5];
                [promptView show:@"请输入期望薪资"];
                [promptView hidden];
                [UIView commitAnimations];
                
            }else{  
                salary =tf.text;
               
                [activityView show];//显示 一个缓冲效果
                
                //此处调用xml数据请求方法
                [self requestForQuery];                
            }
            
        }else{
            UITableViewCell  *cell =[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:i inSection:0]];
            UITextField  *tf =(UITextField *)[cell .contentView viewWithTag:1000];
            if ([tf.text isEqualToString:@""]) {
                if (i==5&&self.experience ==2) {
                    [UIView beginAnimations:nil context:nil];
                    [UIView setAnimationDuration:5];
                    [promptView show:@"请选择学历"];
                    [promptView hidden];
                    [UIView commitAnimations];
                }else{
                    [UIView beginAnimations:nil context:nil];
                    [UIView setAnimationDuration:5];
                    [promptView show:[detailLabelArray objectAtIndex:i-1]];
                    [promptView hidden];
                    [UIView commitAnimations];
                }
                break;
            }
        }
    }
}
-(void)requestForQuery//同步GET请求
{
    NSLog(@"%s %d",__FUNCTION__,__LINE__);
    
    NSString  *string1 =[NSString stringWithFormat:@"http://mobileinterface.zhaopin.com/iphone/payquery/query.service?experience=%d&cityid=%@&industryid=%@&corppropertyid=%@&jobcatid=%@&joblevelid=%@&salary=%d",self.experience,cityID,industryID,corpropertyID,jobcatID,joblevelID,[salary intValue]];
    
    NSString  *string2 =[NSString stringWithFormat:@"http://mobileinterface.zhaopin.com/iphone/payquery/query.service?experience=%d&cityid=%@&industryid=%@&corppropertyid=%@&jobcatid=%@&educationid=%@&salary=%d",self.experience,cityID,industryID,corpropertyID,jobcatID,educationID,[salary intValue]];
    
    NSURL  *url =nil;
    if (self.experience ==1) {
        url =[NSURL URLWithString:string1];
        NSLog(@"%@",string1);
    }else{
        url =[NSURL URLWithString:string2];
        NSLog(@"%@",string2);
    }
    
    NSURLRequest  *request =[NSURLRequest requestWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:10];
    
    NSURLConnection  *connection =[[NSURLConnection alloc] initWithRequest:request delegate:self];
    [connection release];
    
}
- (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response
{
    self.queryData =[[NSMutableData alloc] init];
}
- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data
{    
    [self.queryData  appendData:data];
}
- (void)connectionDidFinishLoading:(NSURLConnection *)connection
{
    NSLog(@"%s %d",__FUNCTION__,__LINE__);
    //隐藏风火轮
    [activityView hidden];
    
    [self readXMLString];
}
//解析从接口获得的XMl数据
-(void)readXMLString
{
    
    NSString  *resultString =[[NSString alloc] initWithData:self.queryData encoding:NSUTF8StringEncoding];
    
    NSLog(@"XML 文本%@",resultString);//XMLString
    
    //将解析的结果解析
    GDataXMLDocument  *document =[[GDataXMLDocument alloc] initWithXMLString:resultString options:0 error:nil];
    //root node
    GDataXMLElement  *root =[document rootElement];
    
    //根据根节点的个数来判断是否查询到有效数据
    if ([[root children] count]==2) {
        // if YES , we give it a prompt animation;
        [UIView beginAnimations:nil context:nil];
        [UIView setAnimationDuration:5];
        [promptView show:@"没有符合该条件的薪资信息！"];
        [promptView hidden];
        [UIView commitAnimations];
        
    }else{
        //else we parse the relative data from the xml  root node;
       
        NSMutableArray  *resultArray =[self  parseFromXMLNodeRoot:root];//存放解析得到的五个类型salary
                
        //进入查询结果的界面
        SalaryQueryResult  *salaryQueryResult =[[SalaryQueryResult alloc] init];
        //传值 
        salaryQueryResult.queryResultArray =resultArray;//五个工资
        salaryQueryResult.exper =self.experience;
        //传ID
        salaryQueryResult.cityID =cityID;
        salaryQueryResult.industryID =industryID;
        salaryQueryResult.corpropertyID =corpropertyID;
        salaryQueryResult.jobcatID =jobcatID;
        salaryQueryResult.joblevelID =joblevelID;
        salaryQueryResult.educationID =educationID;
        //传值，用于条件显示
        salaryQueryResult.city =city;
        salaryQueryResult.industry =industry;
        salaryQueryResult.corproperty =corproperty;
        salaryQueryResult.jobcat =jobcat;
        salaryQueryResult.joblevel =joblevel;
        salaryQueryResult.education =education;
        
        salaryQueryResult.salary =salary;//the salary that user inputs
        
        [self.navigationController pushViewController:salaryQueryResult animated:YES];// push to another view
        [salaryQueryResult release];
    }
}
//
-(NSMutableArray *)parseFromXMLNodeRoot:(GDataXMLElement *)root
{
    NSMutableArray  *mutableArray =[[NSMutableArray alloc] init];
    
    NSArray *node =[root nodesForXPath:@"result/low" error:nil];
    for (GDataXMLElement  *element in node) {
        [ mutableArray addObject:[element stringValue]];
    }
    
    node =[root nodesForXPath:@"result/low-normal" error:nil];
    for (GDataXMLElement  *element in node) {
        [mutableArray addObject:[element stringValue]];
    }
    
    node =[root nodesForXPath:@"result/normal" error:nil];
    for (GDataXMLElement  *element in node) {
        [mutableArray addObject:[element stringValue]];
    }
    
    node =[root nodesForXPath:@"result/normal-high" error:nil];
    for (GDataXMLElement  *element in node) {
        [mutableArray addObject:[element stringValue]];
    }
    
    node =[root nodesForXPath:@"result/high" error:nil];
    for (GDataXMLElement  *element in node) {
        [mutableArray addObject:[element stringValue]];
    }

    return mutableArray;
}
-(void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error
{
    NSLog(@"ERROR %@",[error localizedDescription]);
}
#pragma mark -
- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 7;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    //每行使用一个不同重用标示符，
     NSString *CellIdentifier = [NSString stringWithFormat:@"Row%d",indexPath.row];
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];
    }else{
        return cell;//已经创建过的，就什么都不做()
    }
     
    if (indexPath.row ==0) {  
                cell.selectionStyle =UITableViewCellSelectionStyleNone;//选中样式
        cell.textLabel.text =@"我有工作经验";
        
        UIButton  *button =[UIButton buttonWithType:UIButtonTypeCustom];
        button.frame =CGRectMake(0, 0, 30, 30);
        [button setImage:[UIImage imageNamed:@"search_result_selected.png"] forState:UIControlStateNormal];
        [button addTarget:self action:@selector(changeImage:) forControlEvents:UIControlEventTouchUpInside];
        cell.accessoryView =button;
       
    }else{
       
        UIImageView  *imgV =[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 10, 10)];
        imgV.image =[UIImage imageNamed:@"accessoryArrow.png"];
        cell.accessoryView =imgV;
        
        if (indexPath.row ==6) {
            
            cell.selectionStyle =UITableViewCellSelectionStyleNone;
            cell.textLabel.text =@"期望月薪:";
            
           UITextField * textField =[[UITextField alloc] initWithFrame:CGRectMake(100, 7, 170, 30)];
            textField.placeholder =@"请点击输入";
            textField.text =@"";
            textField.tag =2000;
            textField.clearsOnBeginEditing =YES;//每次编辑前清除原来的数据
            textField.textAlignment =UITextAlignmentRight;
            textField.contentVerticalAlignment=UIControlContentVerticalAlignmentCenter;
            
            textField.keyboardType =UIKeyboardTypeNumberPad;//键盘类型,数字键盘
            textField.delegate =self;//代理，进行视图的移位
            textField.borderStyle =UITextBorderStyleRoundedRect;
            
            [cell.contentView addSubview:textField];
            
        }else
        {//中间的五个查询条件
            cell.textLabel.text =[textLabelArray objectAtIndex:indexPath.row-1];
            UITextField   *tf =[[UITextField alloc] initWithFrame:CGRectMake(100, 7, 170, 30)];
            tf.placeholder =[detailLabelArray objectAtIndex:indexPath.row-1];
            tf.text =@"";
            tf.tag =1000;//方便以后取值
            tf.textAlignment =UITextAlignmentRight;
            tf.contentVerticalAlignment=UIControlContentVerticalAlignmentCenter;
            tf.borderStyle =UITextBorderStyleNone;
            tf .userInteractionEnabled =NO;//关闭与用户的交互
            [cell.contentView addSubview:tf];
            [tf release];
        }
    }
    
    return cell;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView  *aView =[[[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 35)]autorelease];
    
    aView.backgroundColor =[UIColor clearColor];
    UILabel  *label =[[UILabel alloc] initWithFrame:CGRectMake(10, 5, 310, 30)];
    
    label.text =@"请选择薪酬查询条件";
    label.textColor =[UIColor blackColor];
    label.backgroundColor =[UIColor clearColor];
    
    [aView addSubview:label];
    [label release];
    
    return aView;
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 50.0f;//表头高度
}
#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    selectedRow =indexPath.row;
    
    QueryConditions  *queryConditions =[[QueryConditions alloc] init];
    [queryConditions prepareForAllQueryConditions];//调用初始化方法
    
    switch (indexPath.row) {
        case 0:
            
            break;
        case 1:
        { 
            SelectQueryConditons  *detailViewController =[[SelectQueryConditons alloc] init];
            detailViewController.title =@"选择地区";
            detailViewController.selectDelegate =self;
            detailViewController.selectedArray =queryConditions. citysName;
            
            [self.navigationController pushViewController:detailViewController animated:YES];
            [detailViewController release];
        }
            break;
        case 2:
        { 
            SelectQueryConditons  *detailViewController =[[SelectQueryConditons alloc] init];
            detailViewController.title =@"选择行业";
            detailViewController.selectDelegate =self;
            detailViewController.selectedArray =queryConditions.industrysName;
            
            [self.navigationController pushViewController:detailViewController animated:YES];
            [detailViewController release];
        }
            break;
        case 3:
        { 
            SelectQueryConditons  *detailViewController =[[SelectQueryConditons alloc] init];
            detailViewController.title =@"选择企业性质";
            detailViewController.selectDelegate =self;
            detailViewController.selectedArray =queryConditions.corppropertysName;
            
            [self.navigationController pushViewController:detailViewController animated:YES];
            [detailViewController release];
        }
            break;
        case 4:
        { 
            SelectQueryConditons  *detailViewController =[[SelectQueryConditons alloc] init];
            detailViewController.title =@"选择职位类别";
            detailViewController.selectDelegate =self;
            detailViewController.selectedArray =queryConditions.jobcatsName;
            
            [self.navigationController pushViewController:detailViewController animated:YES];
            [detailViewController release];
        }
            break;
        case 5:
        { 
            SelectQueryConditons  *detailViewController =[[SelectQueryConditons alloc] init];
            
            if (self.experience ==1) {
                detailViewController.title =@"选择职位级别";
                detailViewController.selectedArray =queryConditions.joblevelsName;
            } else{                 
                detailViewController.title =@"选择学历";
                detailViewController.selectedArray =queryConditions.educationsName;
            }
            detailViewController.selectDelegate =self;
            [self.navigationController pushViewController:detailViewController animated:YES];
            [detailViewController release];
        }
            break;
        case 6:
            
            break;
        default:
            break;
    }
    
         
}
#pragma mark -
//当输入时调整视图的位置（上移）
-(void)textFieldDidBeginEditing:(UITextField *)textField
{
    NSLog(@"%s %d",__FUNCTION__,__LINE__);
    //注册两个通知，用于监听键盘 显示或隐藏
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardWillShow) name:UIKeyboardDidShowNotification object:nil];

    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide) name:UIKeyboardWillHideNotification object:nil];

}
-(void)textFieldDidEndEditing:(UITextField *)textField
{
    NSLog(@"%s %d",__FUNCTION__,__LINE__);
    //移除之前注册的两个通知
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardDidShowNotification object:nil];
    
    [[NSNotificationCenter defaultCenter ] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
}
-(BOOL)textFieldShouldReturn:(UITextField *)textField
{
    //取消第一响应者
    [textField resignFirstResponder];
    return YES ;
}
#pragma mark -
-(void)keyboardWillShow
{
    NSLog(@"%s %d",__FUNCTION__,__LINE__);
    
    UIButton  *doneBtn =[UIButton buttonWithType:UIButtonTypeCustom];
    doneBtn.frame =CGRectMake(0, 480-53, 106, 53);
    
    [doneBtn setBackgroundImage:[UIImage imageNamed:@"buttonClick.png"] forState:UIControlStateNormal];
    [doneBtn setBackgroundImage:[UIImage imageNamed:@"button.png"] forState:UIControlStateHighlighted];
    [doneBtn setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];
    [doneBtn setTitle:@"完成" forState:UIControlStateNormal];
    doneBtn .tag =500;
    [doneBtn addTarget:self action:@selector(done) forControlEvents:UIControlEventTouchUpInside];
    
    UIWindow  *tempWindow =[[UIApplication sharedApplication].windows objectAtIndex:1];
    
    //在键盘的左下角添加btn
    [tempWindow addSubview:doneBtn];
}
-(void)keyboardWillHide
{
    UIWindow  *tempWindow =[[UIApplication sharedApplication] .windows objectAtIndex:1];
    
    UIButton  *btn =(UIButton *)[tempWindow viewWithTag:500];
    //移除左下角的BUTTON
    [btn removeFromSuperview];
}
-(void)done
{ 
    UITextField *tf =(UITextField *)[[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:6 inSection:0]]viewWithTag:2000];
   // method 1.
    [tf resignFirstResponder];
    //method 2.
    if ([self respondsToSelector:@selector(textFieldShouldReturn:)]) {
        [self performSelector:@selector( textFieldShouldReturn:) withObject:tf];
    }
}
#pragma mark -
-(void)changeImage:(UIButton *)button
{
    UIImage  *image =[UIImage imageNamed:@"search_result_selected.png"];
    UIImage *image2 =[UIImage imageNamed:@"search_result_unselected.png"];
    
    if ([[button imageForState:UIControlStateNormal]isEqual:image]) {
        
        self.experience  =2;//改为无工作经验
        
        [button setImage:image2 forState:UIControlStateNormal];
        
        UITableViewCell  *cell1 =[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:5 inSection:0]];//取cell
        cell1.textLabel.text =@"学       历:";
        UITextField *tf = (UITextField *)[cell1.contentView viewWithTag:1000];
        tf.placeholder =@"请选择学历";
        tf.text =@"";
        
        UITableViewCell  *cell2 =[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:6 inSection:0]];
        cell2.textLabel.text =@"期望起薪:";
        
    }else{
        self. experience  =1;
        
        [button setImage:image forState:UIControlStateNormal];
        
        UITableViewCell  *cell1 =[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:5 inSection:0]];//取cell
        cell1.textLabel.text =@"职位级别:";
        UITextField   *tf =(UITextField *)[cell1.contentView viewWithTag:1000];
        tf.placeholder =@"请选择职位级别";
        tf.text =@"";
        
        UITableViewCell  *cell2 =[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:6 inSection:0]];
        cell2.textLabel.text =@"期望月薪:";
        
    }
    NSLog(@"是否有经验 %d",self.experience);
    
}

#pragma mark  - SelectQueryConditonsDelegate Methods
-(void)selectQueryCondition:(SelectQueryConditons *)selectQueryCondition atIndexPath:(NSIndexPath *)indexPath
{
    NSLog(@"%s %d",__FUNCTION__,__LINE__);
   UITableViewCell  *cell =  [self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:selectedRow inSection:0]];
    
    UITextField  *tf =(UITextField *)[cell.contentView viewWithTag:1000];
    
    tf.text =[selectQueryCondition.tableView cellForRowAtIndexPath:indexPath].textLabel.text;
   
}
-(void)selectedRowIn:(SelectQueryConditons *)sel
{
    NSLog(@"%s %d",__FUNCTION__,__LINE__);
    num =[sel .tableView indexPathForSelectedRow].row;
    
    QueryConditions  *queryConditions =[[QueryConditions alloc] init];
    [queryConditions prepareForAllQueryConditions];
    
    switch (selectedRow) {
        case 1:
            cityID =[queryConditions.citysID objectAtIndex:num];
            city =[queryConditions.citysName objectAtIndex:num];
            break;
        case 2:
            industryID =[queryConditions.industrysID objectAtIndex:num];
            industry =[queryConditions.industrysName objectAtIndex:num];
            break;
        case 3:
            corpropertyID =[queryConditions.corppropertysID objectAtIndex:num];
            corproperty =[queryConditions.corppropertysName objectAtIndex:num];
            break;
        case 4:
            jobcatID =[queryConditions.jobcatsID objectAtIndex:num];
            jobcat =[queryConditions.jobcatsName objectAtIndex:num];
            break;
        case 5:
            if (self.experience ==1) {
                joblevelID =[queryConditions.joblevelsID objectAtIndex:num];
                joblevel =[queryConditions.joblevelsName objectAtIndex:num];
            }else{
                educationID =[queryConditions.educationsID objectAtIndex:num];
                education =[queryConditions.educationsName objectAtIndex:num];
            }
            break;
        
        default:
            break;
    }
    
}
@end
